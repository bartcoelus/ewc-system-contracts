{
  "contractName": "IReportingValidatorSet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_parentHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_newSet",
          "type": "address[]"
        }
      ],
      "name": "InitiateChange",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalizeChange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "validator",
          "type": "address"
        },
        {
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "reportBenign",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "validator",
          "type": "address"
        },
        {
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "reportMalicious",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getValidators",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n\n/// @title Reporting validator set interface\n/// @dev This interface is used by Aura PoA validator contracts to manage active validators and\n/// send reports on misbehaving validators.\ninterface IReportingValidatorSet {\n\n    /// @notice Issue this log event to signal a desired change in validator set.\n    /// This will not lead to a change in active validator set until\n    /// finalizeChange is called.\n    /// @dev Only the last log event of any block can take effect.\n    /// If a signal is issued while another is being finalized it may never\n    /// take effect.\n    /// @param _parentHash The parent block hash. Otherwise the signal will not be recognized.\n    /// @param _newSet List of addresses of the desired new validator set.\n    event InitiateChange(bytes32 indexed _parentHash, address[] _newSet);\n\n    /// @notice Called when an initiated change reaches finality and is activated.\n    /// It is also called when the contract is first enabled for consensus. In this case,\n    /// the \"change\" finalized is the activation of the initial set.\n    /// @dev Only valid when msg.sender == SYSTEM (EIP96, 2**160 - 2).\n    function finalizeChange()\n        external;\n\n    /// @notice Reports benign misbehavior of a validator in the current validator set (e.g. validator offline).\n    /// @param validator Address of the validator to report.\n    /// @param blockNumber The blocknumber to report on.\n    function reportBenign(address validator, uint256 blockNumber)\n        external;\n\n    /// @notice Reports malicious misbehavior of validator of the current validator set\n    /// and provides proof of that misbehavor, which varies by engine (e.g. double vote).\n    /// @param validator Address of the validator to report.\n    /// @param blockNumber The blocknumber to report on.\n    /// @param proof Proof attached.\n    function reportMalicious(address validator, uint256 blockNumber, bytes calldata proof)\n        external;\n\n    /// @notice Get current validator set (last enacted or initial if no changes ever made).\n    /// @return List of addresses of the currently active validators.\n    function getValidators()\n        external\n        view\n        returns (address[] memory);\n}\n",
  "sourcePath": "/home/aznagy/work/ewf/genome/genome-system-contracts/contracts/interfaces/IReportingValidatorSet.sol",
  "ast": {
    "absolutePath": "/home/aznagy/work/ewf/genome/genome-system-contracts/contracts/interfaces/IReportingValidatorSet.sol",
    "exportedSymbols": {
      "IReportingValidatorSet": [
        166
      ]
    },
    "id": 167,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 133,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Reporting validator set interface\n @dev This interface is used by Aura PoA validator contracts to manage active validators and\n send reports on misbehaving validators.",
        "fullyImplemented": false,
        "id": 166,
        "linearizedBaseContracts": [
          166
        ],
        "name": "IReportingValidatorSet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@notice Issue this log event to signal a desired change in validator set.\n This will not lead to a change in active validator set until\n finalizeChange is called.\n @dev Only the last log event of any block can take effect.\n If a signal is issued while another is being finalized it may never\n take effect.\n @param _parentHash The parent block hash. Otherwise the signal will not be recognized.\n @param _newSet List of addresses of the desired new validator set.",
            "id": 140,
            "name": "InitiateChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "indexed": true,
                  "name": "_parentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "791:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "name": "_newSet",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "820:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 136,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "820:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 137,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "820:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "790:48:4"
            },
            "src": "770:69:4"
          },
          {
            "body": null,
            "documentation": "@notice Called when an initiated change reaches finality and is activated.\n It is also called when the contract is first enabled for consensus. In this case,\n the \"change\" finalized is the activation of the initial set.\n @dev Only valid when msg.sender == SYSTEM (EIP96, 2**160 - 2).",
            "id": 143,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeChange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:4"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:0:4"
            },
            "scope": 166,
            "src": "1158:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Reports benign misbehavior of a validator in the current validator set (e.g. validator offline).\n @param validator Address of the validator to report.\n @param blockNumber The blocknumber to report on.",
            "id": 150,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reportBenign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1460:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1479:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1459:40:4"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:4"
            },
            "scope": 166,
            "src": "1438:79:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Reports malicious misbehavior of validator of the current validator set\n and provides proof of that misbehavor, which varies by engine (e.g. double vote).\n @param validator Address of the validator to report.\n @param blockNumber The blocknumber to report on.\n @param proof Proof attached.",
            "id": 159,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reportMalicious",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1881:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1900:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1921:20:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1880:62:4"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1959:0:4"
            },
            "scope": 166,
            "src": "1856:104:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Get current validator set (last enacted or initial if no changes ever made).\n @return List of addresses of the currently active validators.",
            "id": 165,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getValidators",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2151:2:4"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "2201:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 161,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2201:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 162,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2201:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2200:18:4"
            },
            "scope": 166,
            "src": "2129:90:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 167,
        "src": "211:2010:4"
      }
    ],
    "src": "0:2222:4"
  },
  "legacyAST": {
    "absolutePath": "/home/aznagy/work/ewf/genome/genome-system-contracts/contracts/interfaces/IReportingValidatorSet.sol",
    "exportedSymbols": {
      "IReportingValidatorSet": [
        166
      ]
    },
    "id": 167,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 133,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title Reporting validator set interface\n @dev This interface is used by Aura PoA validator contracts to manage active validators and\n send reports on misbehaving validators.",
        "fullyImplemented": false,
        "id": 166,
        "linearizedBaseContracts": [
          166
        ],
        "name": "IReportingValidatorSet",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@notice Issue this log event to signal a desired change in validator set.\n This will not lead to a change in active validator set until\n finalizeChange is called.\n @dev Only the last log event of any block can take effect.\n If a signal is issued while another is being finalized it may never\n take effect.\n @param _parentHash The parent block hash. Otherwise the signal will not be recognized.\n @param _newSet List of addresses of the desired new validator set.",
            "id": 140,
            "name": "InitiateChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "indexed": true,
                  "name": "_parentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "791:27:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "name": "_newSet",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "820:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 136,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "820:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 137,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "820:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "790:48:4"
            },
            "src": "770:69:4"
          },
          {
            "body": null,
            "documentation": "@notice Called when an initiated change reaches finality and is activated.\n It is also called when the contract is first enabled for consensus. In this case,\n the \"change\" finalized is the activation of the initial set.\n @dev Only valid when msg.sender == SYSTEM (EIP96, 2**160 - 2).",
            "id": 143,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeChange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:4"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:0:4"
            },
            "scope": 166,
            "src": "1158:43:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Reports benign misbehavior of a validator in the current validator set (e.g. validator offline).\n @param validator Address of the validator to report.\n @param blockNumber The blocknumber to report on.",
            "id": 150,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reportBenign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1460:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1479:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1479:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1459:40:4"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:4"
            },
            "scope": 166,
            "src": "1438:79:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Reports malicious misbehavior of validator of the current validator set\n and provides proof of that misbehavor, which varies by engine (e.g. double vote).\n @param validator Address of the validator to report.\n @param blockNumber The blocknumber to report on.\n @param proof Proof attached.",
            "id": 159,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reportMalicious",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "name": "validator",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1881:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1900:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "1921:20:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1880:62:4"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1959:0:4"
            },
            "scope": 166,
            "src": "1856:104:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Get current validator set (last enacted or initial if no changes ever made).\n @return List of addresses of the currently active validators.",
            "id": 165,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getValidators",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2151:2:4"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "2201:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 161,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2201:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 162,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2201:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2200:18:4"
            },
            "scope": 166,
            "src": "2129:90:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 167,
        "src": "211:2010:4"
      }
    ],
    "src": "0:2222:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-07T14:55:14.518Z",
  "devdoc": {
    "details": "This interface is used by Aura PoA validator contracts to manage active validators and send reports on misbehaving validators.",
    "methods": {
      "finalizeChange()": {
        "details": "Only valid when msg.sender == SYSTEM (EIP96, 2**160 - 2)."
      },
      "getValidators()": {
        "return": "List of addresses of the currently active validators."
      },
      "reportBenign(address,uint256)": {
        "params": {
          "blockNumber": "The blocknumber to report on.",
          "validator": "Address of the validator to report."
        }
      },
      "reportMalicious(address,uint256,bytes)": {
        "params": {
          "blockNumber": "The blocknumber to report on.",
          "proof": "Proof attached.",
          "validator": "Address of the validator to report."
        }
      }
    },
    "title": "Reporting validator set interface"
  },
  "userdoc": {
    "methods": {
      "finalizeChange()": {
        "notice": "Called when an initiated change reaches finality and is activated. It is also called when the contract is first enabled for consensus. In this case, the \"change\" finalized is the activation of the initial set."
      },
      "getValidators()": {
        "notice": "Get current validator set (last enacted or initial if no changes ever made)."
      },
      "reportBenign(address,uint256)": {
        "notice": "Reports benign misbehavior of a validator in the current validator set (e.g. validator offline)."
      },
      "reportMalicious(address,uint256,bytes)": {
        "notice": "Reports malicious misbehavior of validator of the current validator set and provides proof of that misbehavor, which varies by engine (e.g. double vote)."
      }
    }
  }
}