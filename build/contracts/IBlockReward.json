{
  "contractName": "IBlockReward",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "benefactors",
          "type": "address[]"
        },
        {
          "name": "kind",
          "type": "uint16[]"
        }
      ],
      "name": "reward",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n\n/// @title BlockReward contract interface\n/// @dev This interface must be implemented by a system contract that implements the\n/// reward logic.\ninterface IBlockReward {\n\n    /// @notice Produces rewards for the given benefactors,\n    /// with corresponding reward codes.\n    /// @dev Only callable by `SYSTEM_ADDRESS`.\n    /// @param benefactors The list of addresses who can be rewarded.\n    /// @param kind The corresponding list of reward types for the benefactors.\n    /// @return The list of addresses to be rewarded and the corresponding list of reward amounts.\n    function reward(address[] calldata benefactors, uint16[] calldata kind)\n        external\n        returns (address[] memory, uint256[] memory);\n}\n",
  "sourcePath": "/Users/heikoburkhardt/Documents/genome-system-contracts/contracts/interfaces/IBlockReward.sol",
  "ast": {
    "absolutePath": "/Users/heikoburkhardt/Documents/genome-system-contracts/contracts/interfaces/IBlockReward.sol",
    "exportedSymbols": {
      "IBlockReward": [
        75
      ]
    },
    "id": 76,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title BlockReward contract interface\n @dev This interface must be implemented by a system contract that implements the\n reward logic.",
        "fullyImplemented": false,
        "id": 75,
        "linearizedBaseContracts": [
          75
        ],
        "name": "IBlockReward",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Produces rewards for the given benefactors,\n with corresponding reward codes.\n @dev Only callable by `SYSTEM_ADDRESS`.\n @param benefactors The list of addresses who can be rewarded.\n @param kind The corresponding list of reward types for the benefactors.\n @return The list of addresses to be rewarded and the corresponding list of reward amounts.",
            "id": 74,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "benefactors",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "615:30:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "615:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 61,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "615:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "kind",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "647:22:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "647:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 64,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "647:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "614:56:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "705:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "705:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 68,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "705:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "723:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "723:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 71,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "723:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:36:1"
            },
            "scope": 75,
            "src": "599:142:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 76,
        "src": "171:572:1"
      }
    ],
    "src": "0:744:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/heikoburkhardt/Documents/genome-system-contracts/contracts/interfaces/IBlockReward.sol",
    "exportedSymbols": {
      "IBlockReward": [
        75
      ]
    },
    "id": 76,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title BlockReward contract interface\n @dev This interface must be implemented by a system contract that implements the\n reward logic.",
        "fullyImplemented": false,
        "id": 75,
        "linearizedBaseContracts": [
          75
        ],
        "name": "IBlockReward",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Produces rewards for the given benefactors,\n with corresponding reward codes.\n @dev Only callable by `SYSTEM_ADDRESS`.\n @param benefactors The list of addresses who can be rewarded.\n @param kind The corresponding list of reward types for the benefactors.\n @return The list of addresses to be rewarded and the corresponding list of reward amounts.",
            "id": 74,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "benefactors",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "615:30:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "615:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 61,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "615:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "kind",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "647:22:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "647:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 64,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "647:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "614:56:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "705:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "705:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 68,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "705:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "723:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "723:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 71,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "723:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:36:1"
            },
            "scope": 75,
            "src": "599:142:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 76,
        "src": "171:572:1"
      }
    ],
    "src": "0:744:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-12T15:17:51.959Z",
  "devdoc": {
    "details": "This interface must be implemented by a system contract that implements the reward logic.",
    "methods": {
      "reward(address[],uint16[])": {
        "details": "Only callable by `SYSTEM_ADDRESS`.",
        "params": {
          "benefactors": "The list of addresses who can be rewarded.",
          "kind": "The corresponding list of reward types for the benefactors."
        },
        "return": "The list of addresses to be rewarded and the corresponding list of reward amounts."
      }
    },
    "title": "BlockReward contract interface"
  },
  "userdoc": {
    "methods": {
      "reward(address[],uint16[])": {
        "notice": "Produces rewards for the given benefactors, with corresponding reward codes."
      }
    }
  }
}